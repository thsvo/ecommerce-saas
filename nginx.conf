# Nginx configuration for ecommerce-saas
# Frontend: codeopx.com and *.codeopx.com
# Backend API: api.codeopx.com

# Define upstream servers
upstream frontend {
    server 127.0.0.1:3000;
}

upstream backend {
    server 127.0.0.1:3001;
}

# HTTP server (redirects to HTTPS)
server {
    listen 80;
    server_name codeopx.com www.codeopx.com api.codeopx.com *.codeopx.com;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server for main domain and wildcard subdomains (frontend)
server {
    listen 443 ssl http2;
    server_name codeopx.com www.codeopx.com *.codeopx.com;
    
    # Wildcard SSL configuration
    ssl_certificate /etc/letsencrypt/live/codeopx.com/fullchain.pem;     # Let's Encrypt certificate path
    ssl_certificate_key /etc/letsencrypt/live/codeopx.com/privkey.pem;     # Let's Encrypt private key path
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    
    # Enable OCSP stapling for better SSL performance
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Root directory for static files
    root /var/www/codeopx.com;
    
    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Frontend location
    location / {
        proxy_pass http://frontend;
    }
    
    # Route API requests from tenant subdomains to the backend
    location /api/server/ {
        proxy_pass http://backend/api/;
    }
    
    # Static files location
    location /uploads/ {
        alias /var/www/codeopx.com/public/uploads/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS server for API subdomain (backend)
server {
    listen 443 ssl http2;
    server_name api.codeopx.com;
    
    # Using the same wildcard SSL certificate
    ssl_certificate /etc/letsencrypt/live/codeopx.com/fullchain.pem;     # Let's Encrypt certificate path
    ssl_certificate_key /etc/letsencrypt/live/codeopx.com/privkey.pem;     # Let's Encrypt private key path
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    
    # Enable OCSP stapling for better SSL performance
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # API location
    location / {
        proxy_pass http://backend;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}